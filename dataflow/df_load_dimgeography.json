{
	"name": "df_load_dimgeography",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "src_dimgeography",
						"type": "DatasetReference"
					},
					"name": "sdimgeography"
				},
				{
					"dataset": {
						"referenceName": "dst_sql_countries",
						"type": "DatasetReference"
					},
					"name": "sstagingcountryref"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "smergeresult"
				}
			],
			"script": "source(output(\n\t\tDimGeographyKey as integer,\n\t\tRegion as string,\n\t\tSubRegion as string,\n\t\tCountry as string,\n\t\tCountryCode as string,\n\t\tsysCreatedAt as timestamp,\n\t\tsysChangedAt as timestamp,\n\t\tsysChangedBy as integer,\n\t\tsysCreatedBy as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> sdimgeography\nsource(output(\n\t\tSourceItemId as integer,\n\t\tname as string,\n\t\t{alpha-2} as string,\n\t\t{alpha-3} as string,\n\t\t{country-code} as string,\n\t\t{iso_3166-2} as string,\n\t\tregion as string,\n\t\t{sub-region} as string,\n\t\t{intermediate-region} as string,\n\t\t{region-code} as string,\n\t\t{sub-region-code} as string,\n\t\t{intermediate-region-code} as string,\n\t\tsysCreatedAt as timestamp,\n\t\tsysChangedAt as timestamp,\n\t\tsysChangedBy as integer,\n\t\tsysCreatedBy as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> sstagingcountryref\nsstagingcountryref, sdimgeography join({country-code} == CountryCode,\n\tjoinType:'outer',\n\tbroadcast: 'auto')~> smergeresult"
		}
	}
}